stages:
    - build
    - test

cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
        # Recommended to cache the whole .npm directory instead
        - .npm/

build-job:
    stage: build
    rules:
        - if: $CI_PIPELINE_SOURCE == "push"
    image: node:20
    script:
        - npm ci --cache .npm --prefer-offline
        - npm run build
    artifacts:
        paths:
            - .next/
        when: on_success
        expire_in: "30 days"

e2e:
    stage: test
    needs: ["build-job"]
    # Defining variables at this level so that they have the ability
    # to be overridden further into the job level:
    # https://docs.gitlab.com/ee/ci/variables/index.html#cicd-variable-precedence
    # and https://docs.gitlab.com/ee/ci/yaml/#workflowrulesvariables
    variables:
        TEST_CMD: "npm run e2e"
    rules:
        # Prevent test running on merge request refs
        - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_REF_SLUG =~ /refs\/.*/
          when: never
        # Run the test with npm run e2e if it was pushed to a branch and it wasn't a merge commit
        - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_REF_SLUG !~ /refs\/.*/ && $CI_COMMIT_MESSAGE !~ /Merge branch.*/
        # Run the test with record key if it was pushed to a branch and it was a merge commit
        - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_REF_SLUG !~ /refs\/.*/ && $CI_COMMIT_MESSAGE =~ /Merge branch.*/
          variables:
              TEST_CMD: "npx cypress run --record --key $CYPRESS_RECORD_KEY"

    # Docker image found from:
    # https://hub.docker.com/r/cypress/base
    image: cypress/base:20.9.0
    script:
        - npm ci --cache .npm --prefer-offline
        - npm start &
        - $TEST_CMD
    dependencies:
        - build-job
